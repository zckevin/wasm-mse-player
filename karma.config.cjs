const path = require("path");
const os = require("os");
const process = require("process");
const webpackConfig = require("./webpack.common.cjs").karmaConfig;

const output = {
  path: path.join(os.tmpdir(), '_karma_webpack_') + Math.floor(Math.random() * 1000000),
};


module.exports = function (config) {
  const headless = (process.argv.indexOf("--headless") !== -1);
  const testFiles = "./tests/**/*.test.js";

  config.set({
    plugins: [
      "karma-webpack",
      "karma-jasmine",
      "karma-chrome-launcher",
    ],

    browsers: headless ? ["ChromeHeadless"] : ["Chrome"],

    // base path that will be used to resolve all patterns (eg. files, exclude)
    basePath: "",

    // frameworks to use
    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter
    frameworks: ["jasmine"],

    webpack: { ...webpackConfig, output },

    // exit on test finish, if set to false, karma will watch for changes and rerun tests
    // default value is false
    singleRun: headless ? true : false,

    // list of files / patterns to load in the browser
    files: [
      "./worker/**/*.ts",
      testFiles,

      // tell karma static file server to serve jpeg files generated by webpack
      // https://github.com/ryanclark/karma-webpack/issues/498#issuecomment-790040818
      {
        pattern: `${output.path}/**/*`,
        watched: false,
        included: false,
        served: true,
      },

      // refer to:
      //   https://github.com/libsbmljs/libsbmljs/blob/master/karma.conf.js
      //   https://stackoverflow.com/questions/69589788/how-to-properly-load-wasm-modules-using-karma
      {
        pattern: "./node_modules/@saschazar/wasm-mozjpeg/wasm_mozjpeg.wasm",
        watched: false,
        served: true,
        included: false,
        type: 'wasm'
      },
    ],

    proxies: {
      "/wasm_mozjpeg.wasm": "/base/node_modules/@saschazar/wasm-mozjpeg/wasm_mozjpeg.wasm",
    },

    // preprocess matching files before serving them to the browser
    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor
    preprocessors: {
      "./worker/**/*.ts": ["webpack"],
      [testFiles]: ["webpack"],
    },

    client: {
      jasmine: {
        timeoutInterval: 10 * 1000,
      }
    }
  });
};
